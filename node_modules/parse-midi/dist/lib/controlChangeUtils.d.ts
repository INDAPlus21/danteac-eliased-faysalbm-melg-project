/**
 * For a given `controlNumber` and `controlValue`, get the human-readable
 * function name, as defined in the MIDI specification.
 */
export declare const getControlFunction: (controlNumber: number, controlValue: number) => "bankselect" | "modulation" | "breathcontroller" | "footcontroller" | "portamentotime" | "dataentry" | "volume" | "balance" | "pan" | "expressioncontroller" | "effect1" | "effect2" | "generalpurposecontroller1" | "generalpurposecontroller2" | "generalpurposecontroller3" | "generalpurposecontroller4" | "bankselectfine" | "modulationfine" | "breathcontrollerfine" | "footcontrollerfine" | "portamentotimefine" | "dataentryfine" | "volumefine" | "balancefine" | "panfine" | "expressioncontrollerfine" | "effect1fine" | "effect2fine" | "generalpurposecontroller1fine" | "generalpurposecontroller2fine" | "generalpurposecontroller3fine" | "generalpurposecontroller4fine" | "sustainoff" | "sustainon" | "portamentooff" | "portamentoon" | "sostenutooff" | "sostenutoon" | "softoff" | "softon" | "legatooff" | "legatoon" | "hold2off" | "hold2on" | "soundcontroller1" | "soundcontroller2" | "soundcontroller3" | "soundcontroller4" | "soundcontroller5" | "soundcontroller6" | "soundcontroller7" | "soundcontroller8" | "soundcontroller9" | "soundcontroller10" | "generalpurposecontroller5" | "generalpurposecontroller6" | "generalpurposecontroller7" | "generalpurposecontroller8" | "portamentocontrol" | "effectdepth1" | "effectdepth2" | "effectdepth3" | "effectdepth4" | "effectdepth5" | "dataincrement" | "datadecrement" | "nonregisteredparameternumberfine" | "nonregisteredparameternumber" | "registeredparameternumberfine" | "registeredparameternumber" | null;
/**
 * For a given `controlNumber` and `controlValue`, get the corresponding
 * channel mode message defined in the MIDI specification.
 *
 * This is very similar to `getControlFunction()`, except control numbers
 * 120 - 127 are reserved for channel mode messages instead of being regular
 * control change messages. Keeping this logic separate from that function
 * allows for more targeted type coverage.
 */
export declare const getChannelModeMessage: (controlNumber: number, controlValue: number) => "allsoundoff" | "resetallcontrollers" | "localcontroloff" | "localcontrolon" | "allnotesoff" | "omnimodeoff" | "omnimodeon" | "monomodeon" | "polymodeon" | null;
